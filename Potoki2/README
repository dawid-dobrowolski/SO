=================================================================================
Autor: Dawid Dobrowolski,                                      Krakow, 23.04.2021
=================================================================================

* Zawartosc:
============

Katalog zawiera trzy programy w jezyku C z Zestawu 05 dotyczącego potoków:
---------------------------------------------------------------------------------
I.    Program realizuje problem producent-konsument przy pomocy potoku nazwanego.

	Program składa się z 3 modułów:
					1) fifo.c	-	proces główny
					2)producent.c	-	realizuje producenta
					3)konsument.c	-	realizuje konsumenta

---------------------------------------------------------------------------------

* Jak uruchomic programy:
=========================
Katalog zawiera program Makfile do kompilacji oraz linkowania powyzszych
programow, a takze jego czyszczenia.

  ->Aby skompilowac wszystkiego programy,nalezy wykonac:
        make all

  ->Aby wyczyscic zawartosc katalogu (usunac zbedne pliki), nalezy wykonac:
        make clean

  ->Aby utworzyc potok z linii komend wykonac:
        mkfifo 0644 potok

  ->Aby usunąć potok z linii komend wykonac:
        unlink potok

  ->Aby uruchomić działanie programu Zestawu 05 wykonac w terminalu:
        mkfifo -m 0644 potok
        unlink potok
        xterm -hold -title PRODUCENT -e ./producent.x magazyn schowek potok &
        xterm -hold -title KONSUMENT -e ./konsument.x magazyn schowek potok
        ...
        unlink potok

---------------------------------------------------------------------------------

* Odpowiedzi na pytania do zestawu:
===================================
I    Czym się różni funkcja pipe() od mkfifo()? Co robią te funkcje?

      Funkcja pipe() tworzy potok nienazwany, funkcja mkfifo() tworzy potok
      nazwany, który widoczny jest w systemie plików.
      Pipe() tworzy potok nienazwany który zwraca deskryptory do tablicy,
      gdzie:
      fd[0] - deskryptor do odczytu
      fd[1] - deskryptor do zapisu

      Potok nazwany utworzony przy pomocy mkfifo() jest natomiast traktowany
      jako zwykly plik, ktory nalezy otworzyc za pomoca funkcji open().
      Potok nazwany może łączyć procesy niezależne, a nie tak jak potoki nazwane,
      tylko procesy pokrewne.

II   Co oznacza akronim FIFO?

      FIFO jest skrótem od pełnej nazwy First In, First Out, Pierwszy na Wejściu,
      Pierwszy na Wyjściu, w informatyce jest to pewien sposób organizacji
      strukturą danych.

III   Jak utworzyć i usunąć potok nazwany z linii komend a jak z poziomu programu?

      Z poziomu programu:
===================================
    Aby utworzyć potok nazwany w programie używamy funkcji mkfifo():

      int mkfifo(const char *path, mode t mode);

      gdzie:
            const char *path  - nazwa potoku
            mode t mode       - prawa dostępu
    Aby usunąć potok nazwany w programie używamy funkcji unlink():

      int unlink(const char *path);

      gdzie:
            const char *path  - nazwa potoku

    Przykładowa implementacja:

    ...
    const char* name=argv[3];
    if(mkfifo(name,RIGHTS)==-1)
    {
      perror("mkfifo error");
      _exit(1);
    }
    ...
    if(unlink(name)==-1)
    {
      perror("unlink error");
      exit(1);
    }
    ...
    exit(0);

      Z poziomu linii komend:
===================================

    Aby utworzyć potok nazwany w terminalu wpisujemy:

      mkfifo [-m mode] file_name

      gdzie:
            mode      - prawa dostępu
            file_name - nazwa potoku

    Aby usunąć potok nazwany w terminalu wpisujemy:

      unlink file_name

      gdzie:
            file_name - nazwa potoku

    Przykład:
    ...
    user@user:~$ mkfifo 0644 potok
    ...
    user@user:~$ unlink potok

=================================================================================
